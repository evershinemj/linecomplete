    print(key.decode())
client = redis.Redis()
client.lpush('list', *data)
client.rpush('list', *data)
conn = redis.Redis()
conn.append('key', newstr)
conn.decr('key')
conn.decr('key', val)
conn.get('key')
conn.getrange('key', start, end)
conn.hdel('hash-key')
conn.hexists('hash-key', 'key')
conn.hget('hash-key', 'key')
conn.hgetall('hash-key')
conn.hkeys('hash-key')
conn.hlen('hash-key')
conn.hmget('hash-key', ['k1', 'k2'])
conn.hmset('hash-key', {'k1': 'v1', 'k2': 'v2', 'k3': 'v3'})
conn.hset('hash-key', 'key', 'val')
conn.hvals('hash-key')
conn.incr('key')
conn.incr('key', val)
conn.incrbyfloat('key', val)
conn.lpop('list-key')
conn.lpush('list-key', 'first')
conn.lrange('list-key', 0, -1)
conn.ltrim('list-key', 2, -1)
conn.rpush('list-key', 'last')
conn.rpush('sort-input', 1, 2, 3)
conn.scard('set-key')
conn.sdiff('set-key1', 'set-key2')
conn.set('key', 1)
conn.setrange('key', idx, newstr)
conn.sinter('set-key1', 'set-key2')
conn.smove('set-key', 'set-key2', 'a')
conn.sort('sort-input')
conn.sort('sort-input', alpha=True)
conn.sort('sort-input', by='d-*->field')
conn.sort('sort-input', by='d-*->field', get='d-*->field')
conn.sunion('set-key1', 'set-key2')
conn.zadd('zset-key', {'a': 3, 'b': 2, 'c': 1})
conn.zcount('zset-key', min, max)
conn.zincrby('zset-key', 1, 'a')
conn.zrange('zset-key', 0, -1)
conn.zrange('zset-key', 0, -1, withscores=True)
conn.zrank('zset-key', 'a')
conn.zscore('zset-key', 'a')
for key in client.keys():
import redis
